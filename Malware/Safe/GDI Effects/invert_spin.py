import pygame
import random
import math

# Initialize pygame
pygame.init()

# Set up the screen and window
width, height = 800, 600
screen = pygame.display.set_mode((width, height))
pygame.display.set_caption("Spinning and Inverted Chaos")

# Define colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)

# Clock to control the frame rate
clock = pygame.time.Clock()

# Function to generate chaotic pixel patterns
def chaotic_pixel(color):
    return (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)) if color == "chaos" else color

def draw_chaos():
    for y in range(height):
        for x in range(width):
            color = random.choice([WHITE, BLACK, chaotic_pixel("chaos")])
            screen.set_at((x, y), color)

def invert_screen():
    pygame.transform.flip(screen, True, False)

def rotate_screen(angle):
    return pygame.transform.rotate(screen, angle)

def main():
    running = True
    angle = 0
    while running:
        screen.fill(BLACK)  # Fill the screen with black background
        
        draw_chaos()  # Draw chaotic pixels
        invert_screen()  # Invert the screen vertically
        rotated_screen = rotate_screen(angle)  # Rotate the screen
        
        # Get the rotated screen dimensions
        rotated_rect = rotated_screen.get_rect(center=(width / 2, height / 2))
        
        # Draw the rotated screen
        screen.blit(rotated_screen, rotated_rect.topleft)
        
        pygame.display.flip()  # Update the screen
        
        angle += 2  # Increase the rotation angle
        if angle >= 360:
            angle = 0  # Reset the angle to prevent overflow
        
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

        clock.tick(30)  # Control the frame rate (30 FPS)

    pygame.quit()

if __name__ == "__main__":
    main()
